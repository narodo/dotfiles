Packages to install with apt:

-- List of packages to install --

sudo apt install git vim build-essential tree rgrep mc zsh clangd curl fonts-powerline fzf zsh-autosuggestions zsh-syntax-highlighting tmux pavucontrol pamix xsel gnome-shell-extension-prefs cmake ripgrep tmuxinator

-- Gnome Terminal
  
  Change default shell in gnome terminal
    Preferences -> Command -> "Run a custom command"
    
  Change colour scheme
    Preferences -> Color
       Built-in scheme: Solarized dark
       Palette: Solarized
  
  Switch off terminal bell
    Preferences -> Text

  Turn off title bar
    sudo apt install gnome-shell-extension-pixelsaver
    gnome-extensions enable pixel-saver@deadalnix.me
    gsettings set org.gnome.Terminal.Legacy.Settings headerbar false

-- Create custom bin folder --

  Setup:
     mkdir -p ~/tools/bin
     add ~/tools/bin to PATH


-- NVIM --

Download AppImage from NVIM release page: https://github.com/neovim/neovim/releases

* Download NVIM
    mv ~/Downloads/nvim.appimage ~/tools/nvim-<release number>.appimage
    cd ~/tools
    ln -s -r nvim-0.5.0.appimage ./bin/nvim
    chmod +x ./bin/nvim

* Link into .config dir
    cd ~/.config 
    ln -s ~/tools/dotfiles/nvim nvim

* update Plugins
  start NVIM
    :PlugInstall

* install nodejs  > 12 for coc
    cd ~/tools
    curl -sL https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh -o install_nvm.sh
    chmod +x install_nvm.sh
    ./install_nvm.sh
    rm ./install_nvm.sh

  Install node with nvm and link to bin dir
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" 
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" 
    nvm install --lts
    ln -s `which node` ~/tools/bin/node
   
    Note: 
    	If version does not point to node correctly the warning:
    	    Error: N/A: version "N/A -> N/A" is not yet installed 
    	might pop when starting shell
    	fix with
      	  nvm alias default node

-- ZSH --

* install oh-my-zsh
see: https://github.com/ohmyzsh/ohmyzsh
This will also set zsh to default shell if required.

  Commands:
    cd ~/tools
    wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    chmod +x install.sh
    ./install.sh
    rm install.sh
  
  Link own zshrc and completions:
    cd ~
    rm .zshrc 
    ln -s ~/tools/dotfiles/zsh/zshrc .zshrc
    rm ~/.oh-my-zsh/completions
    ln -s ~/tool/dotfiles/zsh/completions ~/.oh-my-zsh/completions
    compinit

  
  Install plugins:
    git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    

-- TMUX --
    
  Link Tmux config:
    cd ~
    ln -s ./tools/dotfiles/tmux/tmux.conf .tmux.conf	
      
  Install plugins:
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    -> open Tmux and install plugins with <prefix> + I 
    
-- TMUXINATOR --

  Link Tmuxinator config:
    cd ~
    ln -rs ./tools/dotfiles/tmuxinator ./config/tmuxinator

    
-- Herbstluft -- 

  Install from source:
    see  https://herbstluftwm.org/tutorial.html
    
    cd ~/tools
    git clone https://github.com/herbstluftwm/herbstluftwm
    cd herbstluft
    git checkout v0.9.3 # or other version
    
   Install dependencies:
    sudo apt install dmenu dzen2 asciidoc x11-xserver-utils libx11-dev libxrandr-dev libxft-dev

    
   Build:
     mkdir build
     cmake ..
     make 
     sudo make install
     
   Link correct Herbstluft panel to panel.sh
     ln -s panel_desktop.sh panel.sh

   Link Herbstluft config:
     cd ~ 
     ln -s -r tools/dotfiles/herbstluftwm .config/herbstluft
    
    
-- Local Fixups --

    zsh:
      link fixup script to ~/.zshrc.fixup 


-- Spotfiy  client --

    see https://github.com/pwittchen/spotify-cli-linux

    Install:
        pip install spotify-cli-linux --upgrade
    
-- TP Link WiFi Driver

    see https://community.tp-link.com/en/home/forum/topic/208022

    Run:
        git clone https://github.com/cilynx/rtl88x2bu.git
        cd rtl88x2bu
        VER=$(sed -n 's/\PACKAGE_VERSION="\(.*\)"/\1/p' dkms.conf)
        sudo rsync -rvhP ./ /usr/src/rtl88x2bu-${VER}
        sudo dkms add -m rtl88x2bu -v ${VER}
        sudo dkms build -m rtl88x2bu -v ${VER}
        sudo dkms install -m rtl88x2bu -v ${VER}
        sudo modprobe 88x2bu
