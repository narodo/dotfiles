# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/inarodoslawsky/google-cloud-sdk/path.zsh.inc' ]; then . '/home/inarodoslawsky/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/inarodoslawsky/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/inarodoslawsky/google-cloud-sdk/completion.zsh.inc'; fi

export EDITOR="nvim"

export GOOGLE_CLOUD_PROJECT=snaplab-993
export GOOGLE_APPLICATION_CREDENTIALS=$HOME/.config/gcloud/application_default_credentials.json

adbdeviceFunc() {
    if [[ $1 == "cv" ]]; then
        echo "Looking for CV device"
        dev_sn="$(adb devices | grep _cv | head -1 | awk '{print $1}')"
    else
        echo "Looking for APP devices"
        dev_sn="$(adb devices | grep _app | head -1 | awk '{print $1}')"
    fi

    if [[ $dev_sn == "" ]]; then
        echo "Device not found!"
        exit 1
    else
        echo "Device $dev_sn found, setting ANDROID_SERIAL env"
        export ANDROID_SERIAL=$dev_sn
    fi
}

fcd() {
    dir=$(fdfind . -t d $1 | fzf --height=80% --border=sharp \
    --preview='tree -C {}' --preview-window='45%,border-sharp' \
    --prompt='Dirs > ')
    if [ ! -z "$dir" ]; then
        cd $dir
    fi
}

fedit() {
    file=$(fdfind . -t f $1 | fzf --height=80% --border=sharp \
    --preview='tree -C {}' --preview-window='45%,border-sharp' \
    --prompt='Edit file > ')
    if [ ! -z "$file" ]; then
        $EDITOR $file
    fi
}

ffind() {
    file=$(fdfind . -t f $1 | fzf --height=80% --border=sharp \
    --preview='tree -C {}' --preview-window='45%,border-sharp' \
    --prompt='Edit file > ')
    echo $file
}

autoload adbdeviceFunc

alias fd="fdfind"

alias adbApp="adbdeviceFunc app"
alias adbCv="adbdeviceFunc cv"
alias adbRR="adb root && adb remount"

alias gitBc="git branch --show-current"
alias gitLp="git log --pretty=oneline"

